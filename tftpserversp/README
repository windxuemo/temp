This server (tftpserverspV1.3) is single port TFTP Server based on Trivial File
Transfer Protocol and is normally used for PXE Boot or other Network Boots. It
supports advance options like tsize, blksize, block number rollover and interval.

There is one multiport version (tftpservermtV1.3) also available on website. If
you donot have firewall issues, you should use that. Multiport server accepts
all requests on listening port but responds on a new port for each request, using
a separate thread. Multithreaded version runs little faster.

On contrary, this single port server responds to requests back on same
listening port. This way firewall need to be opened for one port only.
Despite using single port, it too can serve multiple clients at same time.

This is sixth stable Release 1.31

BUGS FIXED in Release 1.31
1) Max Block Size is 65503 now.
2) Code Cleanup and More Error Handling

NEW FEATURES in Release 1.3

1) Listening ports can also be specified. Ports more than 1024 do not need root account
2) Block size can now be as large as 65503.
3) Block Number rollover added, allowing transfer of files of any size.

NEW FEATURES in release 1.2

1) Multiple Listening Interfaces can be specified.
2) Logging has been added.
3) Multiple directories can be added to home using aliases
4) Permitted Hosts can be specified

INSTALLATION

Expand the .gz file to an directory, using shell, goto that directory,
edit tftpserver.ini file (may just specify home dir), move tftpserver.ini
file to /etc directory or specify file locations with -i and -l flags.

This program may be setup to start automatically
modifying boot scripts /etc/rc.d/rc.local file or
/etc/inittab file. Never include -v (verbatim flag) while
running as Daemon from these scripts.

COMPILING

The included file tftpserver is an executive file for Linux/Intel only.
YOU NEED TO RE-COMPILE ON Other Platforms like AIX, Solaris on GCC as:-

g++ tftpserver.cpp getServers.cpp -otftpserver -lpthread 
c++ tftpserver.cpp getServers.cpp -otftpserver -lsocket -lnsl -lpthread (on solaris)

TESTING

This server runs in Debug Mode (with flag -v) or as Service (without any flag).
give following command as root:-

tftpserver#./tftpserver -v

You will see following results:-

Starting TFTP...
Alias / is mapped to /home/
Listening On: 192.168.0.19
Listening On: 127.0.0.1
Permitted Clients: All
max blksize: 9192
defult blksize: 512
default interval: 5
Overwrite Existing Files: Yes

Accepting Requests...

Now open one more shell and give following commands:-

$tftp localhost
tftp>get [some file name in home dir]
Received 13112 bytes in 0.0 seconds

and on server you may see
client 127.0.0.1:xxxxx file ...... # blocks served

RUNNING

This program runs in two modes:-
a) Verbatim Mode (using -v argument)
b) Daemon (not using -v argument)

This program uses helper files:-
i)   -i[inifile], where configuration settings can be specified,
     default is /etc/tftpserver.ini
ii) -l[logfile] dumps log to this file in daemon mode, default is syslog

You can run as:-

[Install Dir]/tftpserver (daemon with default files)
[Install Dir]/tftpserver -v (verbatim with default files)
[Install Dir]/tftpserver -i inifile -l logfile (as service)
[Install Dir]/tftpserver -i inifile (as service)
[Install Dir]/tftpserver  -v -i inifile as verbatim

CONFIGURATION

You need home directory(s) to be set in tftpserver.ini file, and
move this ini file to /etc direcory. you may leave other
parameters commented like blksize and interval.

LICENSE

1) This program is released under GNU GENERAL PUBLIC LICENSE, Version 2, June 1991
2) This document is also released under above license.

DEBUG

If program is not responding:-

1) Ensure that you run this program as root only if listening on ports less than 1024.
2) Check network hardware.
3) Run in verbatim mode first (with -v flag), it will provide all debug information
   as it verbatim the activities.
4) Errors like "bind failed" means another tftpserver is running and listening
   at port 69. You can only have one tftp server running at a time. It may also
   come if interface specified under [LISTEN-ON] is not physically available on Server.
   If you have specified [LISTEN-ON] option, check that ip and interface are Active.
   Root account is needed for listening on ports less than 1024 including tftp default
   port 69. If you are not using root account and using default port or port less than
   1024, you may still get this error.
5) You may try recompiling (see COMPILING above).
6) Errors like "libstdc++.so.?: cannot open shared object file: No such file or directory" 
   are possible in some Unix/Linux flavours. Please recompile the program or create symbolic links:-
	ln -s /usr/local/lib/libstdc++.so.? /usr/lib/libstdc++.so.? 
	ln -s /usr/local/lib/libgcc_s.so.? /usr/lib/libgcc_s.so.?
   (? is library version as reported in error)
   or add the library path (directory where above file is) to env variable LD_LIBRARY_PATH.
7) Max size of file being transfered depends on block size, the max block count being 65536,
   it would be 512*65536 or 32MB. This limitation can be increased by increasing block size
   upto 65531 which makes the max file size to 4.2 GB. However the block size also depent on
   client. Some clients like Linux support block number rollover, which make the max file size
   unlimited, irrespective of block size.

UNINSTALLATION

Just remove the program directory. You should also remove entries from initialize scripts of 
your machine.

If you find any problem with this program or need more features, please send mail to achaldhir@gmail.com.
You may also send thanks email if it works fine for you.
